services:
  geoquizz.db:
    image: "postgres:latest"
    env_file: ./geoquizzdb.env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer
    ports:
      # - 32501:8080
      - 1001:8080
    # command: php -S 0.0.0.0:8080 -t /var/www/html

  gateway.geoquizz:
    build:
      context: build
      dockerfile: Dockerfile_Gateway
    ports:
      # - 32500:80
      - 1000:80
    volumes:
      - ./Backend/app-gateway:/var/php
      - ./Backend/tokenDirectus.ini:/var/php/../../tokenDirectus.ini
    working_dir: /var/php
    command: php -S 0.0.0.0:80 -t public

  api.geoquizz:
    build:
      context: build
      dockerfile: Dockerfile_Principal
    env_file:
      - ./geoquizz.env
    ports:
      # - 32502:80
      - 1002:80
    volumes:
      - ./Backend/app-geoquizz:/var/php
      - ./Backend/tokenDirectus.ini:/var/php/../../tokenDirectus.ini
    working_dir: /var/php
    depends_on:
      - geoquizz.db
    command: php -S 0.0.0.0:80 -t public

  app.auth:
    build:
      context: build
      dockerfile: Dockerfile_Principal
    env_file:
      - ./geoquizz.env
    ports:
      # - 32503:80
      - 1003:80
    volumes:
      - ./Backend/app-auth:/var/php
    working_dir: /var/php
    depends_on:
      - geoquizz.db
    command: php -S 0.0.0.0:80 -t public

  cache:
    image: redis:6
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(redis-cli ping) = 'PONG' ]" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  api.directus:
    image: directus/directus:11.1.1
    ports:
      # - 32504:8055
      - 1004:8055
    volumes:
      - ./Backend/app-directus/uploads:/directus/uploads
      - ./Backend/app-directus/extensions:/directus/extensions
    env_file:
      - ./geodirectus.env
    depends_on:
      geoquizz.db:
        condition: service_healthy
      cache:
        condition: service_healthy
    